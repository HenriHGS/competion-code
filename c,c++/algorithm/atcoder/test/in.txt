#include <iostream>
#include <cstdio>
#include <vector>
#include <map>
#include <unordered_map>
#include <set>
#include <algorithm>
#include <queue>
#include <stack>
#include <string>
#include <cmath>
#include <cstring>
#include <chrono>//随机化
#include <cstdint>//
#include <ctime>//
#include <random>//
#define For(i,x,y) for(int i = (x); i <= (y); i ++ )
#define fori(i,x,y) for(int i = (x); i < (y); i ++ )
#define sz(a) (int)a.size()
#define ALL(a) a.begin(), a.end()
#define mst(x,a) memset(x,a,sizeof(x))
#define pb push_back
#define eb emplace_back
#define mp make_pair
#define fi first
#define se second
#define db double
#define endl '\n' 
#define debug(a) cout << #a << ": " << a << endl
using namespace std;
typedef long long LL;
typedef long long ll;
typedef unsigned long long ULL;
const LL INF = 0x3f3f3f3f3f3f3f3f;
const int inf = 0x3f3f3f3f;
const int mod = 1e9+7;
typedef pair<int,int>pa;
typedef pair<ll,ll>pai;
typedef pair<db,db> pdd;
const db eps = 1e-6;
const db pi = acos(-1.0);
mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());
template<typename T1, typename T2> void ckmin(T1 &a, T2 b) { if (a > b) a = b; }
template<typename T1, typename T2> void ckmax(T1 &a, T2 b) { if (a < b) a = b; }
int read() {
    int x = 0, f = 0; char ch = getchar();
    while (!isdigit(ch)) f |= ch == '-', ch = getchar();
    while (isdigit(ch)) x = 10 * x + ch - '0', ch = getchar();
    return f ? -x : x;
}
template<typename T> void print(T x) {
    if (x < 0) putchar('-'), x = -x;
    if (x >= 10) print(x / 10);
    putchar(x % 10 + '0');
}
template<typename T> void print(T x, char let) {
    print(x), putchar(let);
}
template<class T> bool uin(T &a, T b) { return a > b ? (a = b, true) : false; }
template<class T> bool uax(T &a, T b) { return a < b ? (a = b, true) : false; }

const int maxn = 100000 + 6;
char s[maxn];
char op[3] = {'+', '-', '*'};
int dlen(int x){
    int res = 0;
    while(x){
        x /= 10;
        res++;
    }
    return res;
}
void write_d(int &len){
    int dlen = rng()% 9;
    while(dlen == 0){
        dlen = rng()% 9;
    } 
    int dig = rng()%10;
    if(dig == 0) dig++;
    s[len++] = dig + '0'; dlen--;
    while(dlen--){
        dig = rng()%10;
        s[len++] = dig + '0';
    }
}
void wirte_op(int& len){
    int ind = rng()%3;
    s[len++] = op[ind];
}
FILE *fp1;
void get(int mx){
    int len = 0;
    write_d(len);
    for(int i = 2; i <= mx; i ++ ){
        wirte_op(len);
        write_d(len);
    }
    s[len++] = '\n';
    s[len] = '\0';
    fputs(s,fp1);
    printf("%s", s);
}

int main() {
    //ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
    
    fp1 = fopen("D:\\codefield\\c,c++\\atcoder\\test\\out.txt", "w");
    get(3);
    //For(i,1,10) get(100);
    //For(i,1,10) get(1000);
    //For(i,1,10) get(1000);
    //For(i,1,10) get(10000);
    return 0;
}